
/*
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


package ardufocuser.starfocusing.gui;

import ardufocuser.starfocusing.Utils;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.GeneralPath;

/**
 *
 * @author zerjillo josemlp
 */
public class CartesianPanel extends javax.swing.JPanel {

    int[][] pixels;
    int min;
    int max;

    /**
     * Creates new form CartesianPanel
     */
    public CartesianPanel() {
        initComponents();

        pixels = null;
    }

    public void setPixels(int[][] pixels) {
        this.pixels = pixels;

        computeMinMax();

        repaint();
    }

    private void computeMinMax() {
        int[] res = Utils.computeMinMax(pixels);
        min = res[0];
        max = res[1];

        if (max < min * 2.5) {  // Para que cuando solo haya ruido no salga muy picudo
            max = (int)(min * 3);
        }
    }

    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        if (pixels != null) {
            Graphics2D g2 = (Graphics2D) g;

            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

            int width = getWidth();
            int height = getHeight();

            int xPixels = pixels.length;
            int yPixels = pixels[0].length;

            double xDisplacementPerColumn = (double) (width * 0.7) / (xPixels - 1);
            double xDisplacementPerRow = (double) (width * 0.3) / yPixels;
            double maxLineHeight = (double) height * 0.8;
            double yDisplacementPerRow = (double) (height * 0.2) / yPixels;

            for (int y = 0; y < yPixels; y++) {

                GeneralPath polyline = new GeneralPath(GeneralPath.WIND_EVEN_ODD, xPixels);
                GeneralPath polylineFill = new GeneralPath(GeneralPath.WIND_EVEN_ODD, xPixels);

                polylineFill.moveTo(((yPixels - y) * xDisplacementPerRow), height + 1 - (yPixels - y) * yDisplacementPerRow);
                int currentX = 0;
                for (int x = 0; x < xPixels; x++) {
                    currentX = (int) ((x * xDisplacementPerColumn) + ((yPixels - y) * xDisplacementPerRow));
                    int currentY = height + 1 - (int) (((double) (pixels[x][y] - min) / (double) (max - min)) * maxLineHeight + (yPixels - y) * yDisplacementPerRow);

                    if (x == 0) {
                        polyline.moveTo(currentX, currentY);
                    } else {
                        polyline.lineTo(currentX, currentY);
                    }

                    polylineFill.lineTo(currentX, currentY);
                }

                polylineFill.lineTo(currentX, height + 1 - (yPixels - y) * yDisplacementPerRow);

                g.setColor(new Color(0, 0, 50, 25));
                g2.fill(polylineFill);
                g.setColor(new Color(0, 0, 0, 200));
                g2.draw(polyline);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
